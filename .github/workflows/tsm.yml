name: Predict taint specifications
on:
  workflow_dispatch:
    inputs:
      query_name:
        description: >
          Name of the query to run (one of NoSql, Sql, Xss, TaintedPath).
        required: true
        default: "NoSql"
      training_projects:
        description: >
          A JSON array of projects to train on (specified either as LGTM.com slugs
          or as database names to be downloaded from Azure blob storage).
        required: true
        default: '["g/bitpay/bitcore"]'
      test_projects:
        description: >
          A JSON array of projects to predict new taint specifications for
          (specified as LGTM.com slugs); defaults to the same list as training_projects.
        required: false
        default: ""
      codeql_library_version:
        description: >
          Which branch of the `github/codeql` repository to get the query library from.
          Defaults to `lgtm.com`.
        required: false
        default: "lgtm.com"
jobs:
  record_parameters:
    name: Record workflow parameters
    runs-on: ubuntu-latest
    steps:
      - name: Workflow parameters
        run: |
          echo "${{ toJSON(github.event) }}"

  train:
    name: Train on ${{ matrix.project }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJSON(github.event.inputs.training_projects) }}
    steps:
      - name: Check out this repo
        uses: actions/checkout@v2

      - name: Check out CodeQL standard library
        uses: actions/checkout@v2
        with:
          repository: github/codeql
          path: codeql-lib
          ref: "${{ github.event.inputs.codeql_library_version }}"

      - name: Download CodeQL
        uses: dsaltares/fetch-gh-release-asset@939be9e72e81fe7009b6112bc96abde38bf7b68f
        with:
          repo: "github/codeql-cli-binaries"
          version: "latest"
          file: "codeql-linux64.zip"
          target: "codeql.zip"

      - name: Set up CodeQL
        run: |
          unzip -q codeql.zip
          echo "$(readlink -f codeql)" >>$GITHUB_PATH
          mkdir $HOME/.config/codeql
          echo '--ram 6000' >$HOME/.config/codeql/config
          echo '--threads 2' >>$HOME/.config/codeql/config

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('code/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get install coinor-cbc
          python -m pip install --upgrade pip
          pip install virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r code/requirements.txt
          python -m pip install -i https://pypi.gurobi.com gurobipy

      - name: Sanitize project name
        id: sanitize-name
        run: |
          sanitized_name=$(echo ${{ matrix.project }} | sed s/[^a-zA-Z0-9_-]/_/g)
          echo "::set-output name=sanitized_name::$sanitized_name"

      - name: Train model
        env:
          ATM_BLOB_STORE_SAS_TOKEN: ${{ secrets.ATM_BLOB_STORE_SAS_TOKEN }}
        run: |
          source env/bin/activate
          ./scripts/train.sh \
            "${{ github.event.inputs.query_name }}" \
            "${{ matrix.project }}"

      - name: Upload scores
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.sanitize-name.outputs.sanitized_name }}-scores"
          path: "scripts/results/*/*/reprScores.txt"

  combine_scores:
    name: Combine scores
    needs:
      - train
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('code/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get install coinor-cbc
          python -m pip install --upgrade pip
          pip install virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r code/requirements.txt
          python -m pip install -i https://pypi.gurobi.com gurobipy

      - name: Download scores for individual projects
        uses: actions/download-artifact@v2

      - name: Combine scores
        run: |
          source env/bin/activate
          case "${{ github.event.inputs.query_name }}" in
            "NoSql")
              lib="NosqlInjection"
            ;;
            "Sql")
              lib="SqlInjection"
            ;;
            "Xss")
              lib="DomBasedXss"
            ;;
            "TaintedPath")
              lib="TaintedPath"
            ;;
            *)
              echo "Unsupported query $query_name; should be NoSql, Sql, Xss or TaintedPath."
              exit 1
            ;;
          esac
          find . -name reprScores.txt
          python code/misc/combinescores.py \
            --query-name "${lib}Worse" \
            --project-dir "*-scores"

      - name: Upload scores
        uses: actions/upload-artifact@v2
        with:
          name: scores
          path: "allscores_*.txt"
